{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","startYear","setStartYear","startMonth","setStartMonth","startDay","setStartDay","endYear","setEndYear","endMonth","setEndMonth","endDay","setEndDay","setInterestRate","yearDiff","setYearDiff","monthDiff","setMonthDiff","DayDiff","setDayDiff","buttonDisabled","changeInterestRate","e","target","value","class","className","type","onChange","onClick","start","end","dt1","Date","dt2","console","log","d1","d2","Months","getMonth","Years","getFullYear","Days","getDate","MonthOverFlow","LastDayOfMonth","l","l1","years","months","days","alert","calculateInterest","dateDiff","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca1428b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n    let [startYear, setStartYear] = useState(0);\n    let [startMonth, setStartMonth] = useState(0);\n    let [startDay, setStartDay] = useState(0);\n    let [endYear, setEndYear] = useState(0);\n    let [endMonth, setEndMonth] = useState(0);\n    let [endDay, setEndDay] = useState(0);\n    let [interestRate, setInterestRate] = useState(0);\n    let [yearDiff, setYearDiff] = useState(0);\n    let [monthDiff, setMonthDiff] = useState(0);\n    let [DayDiff, setDayDiff] = useState(0);\n    let [buttonDisabled, isButtonDisabled] = useState(false);\n    function calculate() {\n        let start = startYear + '-' + startMonth + '-' + startDay;\n        let end = endYear + '-' + endMonth + '-' + endDay;\n        let dt1 = new Date(start);\n        let dt2 = new Date(end);\n        console.log(start);\n        console.log(end);\n        dateDiff(dt1, dt2);\n    }\n    function dateDiff(d1, d2) {\n        var Months = d2.getMonth() - d1.getMonth();\n        var Years = d2.getFullYear() - d1.getFullYear();\n        var Days = d2.getDate() - d1.getDate();\n        Months =\n            d2.getMonth() +\n            12 * d2.getFullYear() -\n            (d1.getMonth() + 12 * d1.getFullYear());\n        var MonthOverFlow = 0;\n        if (Months - Years * 12 < 0) MonthOverFlow = -1;\n        else MonthOverFlow = 1;\n        if (MonthOverFlow < 0) Years = Years - 1;\n        Months = Months - Years * 12;\n        var LastDayOfMonth = new Date(\n            d2.getFullYear(),\n            d2.getMonth() + 1,\n            0,\n            23,\n            59,\n            59\n        );\n        LastDayOfMonth = LastDayOfMonth.getDate();\n        if (MonthOverFlow < 0 && d1.getDate() > d2.getDate()) {\n            Days = LastDayOfMonth + (d2.getDate() - d1.getDate()) - 1;\n        } else Days = d2.getDate() - d1.getDate();\n        if (Days < 0) Months = Months - 1;\n        var l = new Date(d2.getFullYear(), d2.getMonth(), 0);\n        var l1 = new Date(d1.getFullYear(), d1.getMonth() + 1, 0);\n        if (Days < 0) {\n            if (l1 > l) Days = l1.getDate() + Days;\n            else Days = l.getDate() + Days;\n        }\n        console.log(Years + 'Year(s), ' + Months + ' Month(s), ' + Days + 'Day(s)');\n        setYearDiff(Years);\n        setMonthDiff(Months);\n        setDayDiff(Days);\n        calculateInterest(Years, Months, Days);\n    }\n    function calculateInterest(years, months, days) {\n        if (years > 5 || months > 12 || days > 31) {\n            alert(\"please check start and end dates\");\n            return;\n        }\n    }\n    function changeStartYear(e) {\n        setStartYear(e.target.value);\n    }\n    function changeStartMonth(e) {\n        setStartMonth(e.target.value);\n    }\n    function changeStartDay(e) {\n        setStartDay(e.target.value);\n    }\n    function changeEndYear(e) {\n        setEndYear(e.target.value);\n    }\n    function changeEndMonth(e) {\n        setEndMonth(e.target.value);\n    }\n    function changeEndDay(e) {\n        setEndDay(e.target.value);\n    }\n    function changeInterestRate(e) {\n        setInterestRate(e.target.value);\n    }\n    return (\n        <div class=\"app-container\">\n            <div class=\"display-flex\">\n                <form className=\"formStyle mb-20\">\n                    <h2> Start Date </h2>\n                    <div>\n                        <label className=\"labelStyle\">Start Year</label>\n                        <input\n                            type=\"text\"\n                            className=\"inputStyle\"\n                            onChange={changeStartYear}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"labelStyle\">Start Month</label>\n                        <input\n                            type=\"text\"\n                            className=\"inputStyle\"\n                            onChange={changeStartMonth}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"labelStyle\">Start Day</label>\n                        <input\n                            type=\"text\"\n                            className=\"inputStyle\"\n                            onChange={changeStartDay}\n                        />\n                    </div>\n                    <div />\n                </form>\n                <form className=\"formStyle mb-20\">\n                    <h2> End date </h2>\n                    <div>\n                        <label className=\"labelStyle\">End Year</label>\n                        <input\n                            type=\"text\"\n                            className=\"inputStyle\"\n                            onChange={changeEndYear}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"labelStyle\">End Month</label>\n                        <input\n                            type=\"text\"\n                            className=\"inputStyle\"\n                            onChange={changeEndMonth}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"labelStyle\">End Day</label>\n                        <input type=\"text\" className=\"inputStyle\" onChange={changeEndDay} />\n                    </div>\n                    <div />\n                </form>\n            </div>\n            <form className=\"formStyle\">\n                <div>\n                    <label className=\"labelStyle\">Amount</label>\n                    <input\n                        type=\"text\"\n                        className=\"inputStyle\"\n                        onChange={changeInterestRate}\n                    />\n                </div>\n                <div>\n                    <label className=\"labelStyle\">Interest Rate</label>\n                    <input\n                        type=\"text\"\n                        className=\"inputStyle\"\n                        onChange={changeInterestRate}\n                    />\n                </div>\n                Year(s): {yearDiff}<br />\n                Month(s): {monthDiff}<br />\n                Day(s): {DayDiff}<br />\n                <input type=\"button\" onClick={calculate} value=\"Calculate\"\n                className={ buttonDisabled ? 'submitStyle button-disabled' : 'submitStyle button-enabled'} />\n                    \n        \n            </form>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}